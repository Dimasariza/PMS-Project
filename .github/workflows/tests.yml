name: Tests

on:
  push:
    branches: [ "backend" ]
  pull_request:
    branches: [ "backend" ]
  
jobs:
  laravel-tests:
    runs-on: ubuntu-latest

    services:
      mysql_db:
        image: mysql:latest
        env:
          MYSQL_DATABASE: pms_project_db
          MYSQL_ROOT_PASSWORD: root
        ports:
          - 33306:3306
        options: >-
          --health-cmd="mysqladmin ping"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

    strategy:
      matrix:
        operating-system: [ubuntu-latest]
        php-versions: [ '8.1' ]
        dependency-stability: [ 'prefer-none' ]

        laravel: [ '10.*' ]
        include:
          - laravel:  10.*
            testbench: 8.*

    name: P${{ matrix.php-versions }} - L${{ matrix.laravel }} - ${{ matrix.dependency-stability }} - ${{ matrix.operating-system}}

    defaults:
      run:
        working-directory: ./src
    
    steps:
      - uses: actions/checkout@v3

      - name: Install PHP versions
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-versions }}

      - name: Get Composer Cache Directory 2
        id: composer-cache
        run: |
          echo "::set-output name=dir::$(composer config cache-files-dir)"
      
      - uses: actions/cache@v3
        id: actions-cache
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-composer-

      - name: Cache PHP dependencies
        uses: actions/cache@v3
        id: vendor-cache
        with:
          path: vendor
          key: ${{ runner.OS }}-build-${{ hashFiles('**/composer.lock') }}
      
      - name: Copy .env
        run: php -r "file_exists('.env') || copy('.env.example', '.env');"

      - name: Install Laravel Dependencies
        run: |
          composer require "laravel/framework:${{ matrix.laravel }}" "orchestra/testbench:${{ matrix.testbench }}" --no-interaction --no-update
          composer update --prefer-dist --no-interaction --no-suggest

      - name: Generate key
        run: php artisan key:generate

      - name: Directory Permissions
        run: chmod -R 777 storage bootstrap/cache

      - name: Run Migrations
        env:
          DB_HOST: mysql_db
          DB_CONNECTION: mysql
          DB_DATABASE: pms_project_db
          DB_PORT: 33306
          DB_USER: root
          DB_PASSWORD: root
        run: php artisan migrate

      - name: Show dir
        run: pwd

      - name: PHP Version
        run: php --version
      
      - name: Execute tests
        env:
          DB_HOST: mysql_db
          DB_CONNECTION: mysql
          DB_DATABASE: pms_project_db
          DB_PORT: 33306
          DB_USER: root
          DB_PASSWORD: root

        run: vendor/bin/phpunit --testdox
