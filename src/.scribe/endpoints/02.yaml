name: User
description: |-

  APIs for user in general
endpoints:
  -
    httpMethods:
      - GET
    uri: api/v1/user
    metadata:
      groupName: User
      groupDescription: |-

        APIs for user in general
      subgroup: ''
      subgroupDescription: ''
      title: All
      description: 'Get list of user'
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
      Authorization: 'Bearer 3|iMxzfuvnFX02IwrhZ8ysPCbwz359xXtR5Rts6QBv'
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |
          {
              "statusCode": 200,
              "message": "Success",
              "data": [
                  {
                      "id": 1,
                      "username": "mac73",
                      "fullname": "Cory Lakin",
                      "email": "napoleon.daugherty@example.com",
                      "workPlace": "office",
                      "status": true,
                      "document": "q5kPi6lZcXZ2epP6apHT",
                      "createdAt": "2023-04-27 12:12:17",
                      "updatedAt": "2023-04-27 12:12:17",
                      "department": {
                          "id": 3,
                          "name": "Osvaldo Rice",
                          "code": "IL",
                          "workPlace": "8142 April Falls\nJamelberg, WY 17000-8540"
                      },
                      "title": {
                          "id": 3,
                          "name": "Chief Officer",
                          "access": {
                              "stock": false,
                              "users": true,
                              "jobList": true,
                              "shipList": false,
                              "dataSheet": true,
                              "department": true,
                              "shipDetails": false
                          },
                          "createdAt": "2023-04-27 12:12:15"
                      }
                  },
                  {
                      "id": 2,
                      "username": "igreen",
                      "fullname": "Leanna Torphy",
                      "email": "phyllis.conn@example.com",
                      "workPlace": "office",
                      "status": false,
                      "document": "XNkthvsxloY6OgXXLfq6",
                      "createdAt": "2023-04-27 12:12:17",
                      "updatedAt": "2023-04-27 12:12:17",
                      "department": {
                          "id": 2,
                          "name": "Prof. Antwan Hermann Sr.",
                          "code": "VI",
                          "workPlace": "664 Kuhic Parks\nAnthonyville, CA 81454-3650"
                      },
                      "title": {
                          "id": 1,
                          "name": "Captain",
                          "access": {
                              "stock": true,
                              "users": true,
                              "jobList": true,
                              "shipList": true,
                              "dataSheet": true,
                              "department": true,
                              "shipDetails": true
                          },
                          "createdAt": "2023-04-27 12:12:15"
                      }
                  }
              ]
          }
        headers: []
        description: Success
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/user
    metadata:
      groupName: User
      groupDescription: |-

        APIs for user in general
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      username:
        name: username
        description: 'Must match the regex /^\S*$/u. Must not be greater than 255 characters.'
        required: true
        example: fjchhifoingobpatlie
        type: string
        custom: []
      fullname:
        name: fullname
        description: 'Must not be greater than 255 characters.'
        required: true
        example: zqalyjcb
        type: string
        custom: []
      departmentId:
        name: departmentId
        description: ''
        required: true
        example: deleniti
        type: string
        custom: []
      email:
        name: email
        description: 'Must be a valid email address. Must not be greater than 255 characters.'
        required: true
        example: demarcus.predovic@example.net
        type: string
        custom: []
      password:
        name: password
        description: 'Must be at least 8 characters. Must not be greater than 255 characters.'
        required: true
        example: 'h)yH7Vp5ixhvQkh*>NDF'
        type: string
        custom: []
      userTitleId:
        name: userTitleId
        description: ''
        required: true
        example: deserunt
        type: string
        custom: []
      workPlace:
        name: workPlace
        description: 'Must be one of <code>ship</code> or <code>office</code>.'
        required: true
        example: office
        type: string
        custom: []
      status:
        name: status
        description: ''
        required: true
        example: false
        type: boolean
        custom: []
      document:
        name: document
        description: ''
        required: false
        example: null
        type: string
        custom: []
    cleanBodyParameters:
      username: fjchhifoingobpatlie
      fullname: zqalyjcb
      departmentId: deleniti
      email: demarcus.predovic@example.net
      password: 'h)yH7Vp5ixhvQkh*>NDF'
      userTitleId: deserunt
      workPlace: office
      status: false
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/user/{id}'
    metadata:
      groupName: User
      groupDescription: |-

        APIs for user in general
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the user.'
        required: true
        example: 1
        type: integer
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 403
        content: '{"statusCode":403,"message":"Unauthenticated"}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          x-ratelimit-limit: '60'
          x-ratelimit-remaining: '59'
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
      - PATCH
    uri: 'api/v1/user/{id}'
    metadata:
      groupName: User
      groupDescription: |-

        APIs for user in general
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the user.'
        required: true
        example: 1
        type: integer
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      username:
        name: username
        description: 'Must not be greater than 255 characters.'
        required: true
        example: iacnnvswlrm
        type: string
        custom: []
      fullname:
        name: fullname
        description: 'Must not be greater than 255 characters.'
        required: true
        example: dktos
        type: string
        custom: []
      departmentId:
        name: departmentId
        description: ''
        required: true
        example: sed
        type: string
        custom: []
      email:
        name: email
        description: 'Must not be greater than 255 characters.'
        required: true
        example: glowe@example.org
        type: string
        custom: []
      userTitleId:
        name: userTitleId
        description: ''
        required: true
        example: explicabo
        type: string
        custom: []
      workPlace:
        name: workPlace
        description: ''
        required: true
        example: veritatis
        type: string
        custom: []
      status:
        name: status
        description: 'Must be one of <code>true</code> or <code>false</code>.'
        required: true
        example: 'false'
        type: boolean
        custom: []
      document:
        name: document
        description: ''
        required: false
        example: null
        type: string
        custom: []
    cleanBodyParameters:
      username: iacnnvswlrm
      fullname: dktos
      departmentId: sed
      email: glowe@example.org
      userTitleId: explicabo
      workPlace: veritatis
      status: 'false'
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
